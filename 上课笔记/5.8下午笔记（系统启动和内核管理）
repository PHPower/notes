5.8下午笔记（系统启动和内核管理）

CentOS 5和6的启动流程
服务管理
Grub管理
自制Linux
启动排错
编译安装内核





'Linux组成：'
	linux：kernel + rootfs
		kernel：进程管理、内存管理、网络管理、驱动程序、文件系统、安全功能
		rootfs：程序和glibc
			glibc：库文件

		库：函数集合，function ，调用接口（头文件负责描述）
			过程调用：procedure，无返回值
				执行命令，没有返回结果

			函数调用：function
				有返回结果，可以执行 $? 获得返回值

		程序：二进制执行文件

	内核设计流派：
		
		单内核（monolithic kernel）：Linux
			把所有功能集成于同一个程序
			
			'Linux的内核文件：'
				[root@centos6 ~]# file /boot/vmlinuz-2.6.32-642.el6.x86_64
				/boot/vmlinuz-2.6.32-642.el6.x86_64: Linux kernel x86 boot executable bzImage, version 2.6.32-642.el6.x86_64 (mockbuil, RO-rootFS, swap_dev 0x4, Normal VGA

		微内核（micro kernel）：Windows，solaris
			每种功能使用一个单独子系统实现

			GNU自己的内核：
				GNU Hurd是一套操作系统内核，以微内核架构设计。Hurd是GNU操作系统的核心部分。GNU项目从1990年开始开发GNU Hurd，并且将它作为一个遵循GPL的自由软件发布。Hurd的目标是从功能、安全性和稳定性上全面超越传统Unix内核，而同时又能保持对其的兼容性，为此Hurd遵守POSIX标准。
				“HURD”是一个间接递归缩写，来自“HIRD of Unix Replacing Daemons”，其中“HIRD”表示“HURD of Interfaces Representing Depth”[

'内核：'
	
	'Linux内核特点：'
		支持模块化：.ko（内核对象）
			如：文件系统，硬件驱动，网络协议等
			$ locate ext4.ko    #查找ext4.ko模块的位置
		支持内核模块的动态装载和卸载
			不使用就不加载（节省资源）


	'组成部分：'
		核心文件：/boot/vmlinuz-VERSION-release
			ramdisk：辅助的伪根系统
			CentOS 5: /boot/initrd-VERSION-release.img
			CentOS 6,7: /boot/initramfs-VERSION-release.img
				这个initramfs提供的是：
					系统启动时所需要的库和驱动文件

		模块文件：/lib/modules/VERSION-release
			驱动模块文件；一般不会自动加载，除非系统需要使用，才会自动加载所需模块
			查看是否加载某个驱动模块：
				$ lsmod | grep MODE 

		'总结：'
			/boot/vmlinuz-VERSION-release：系统最基本的驱动放在内核中
				最小的文件，最基本的
			
			/boot/initramfs-VERSION-release.img：和启动相关的驱动放在这个文件中
				启动相关的
			
			/lib/modules/`uname -r`/：大量的驱动文件存放位置
				所有驱动，其他驱动


'CentOS6启动流程；'

	1.加载BIOS的硬件信息，获取第一个启动设备
	2.读取第一个启动设备MBR的引导加载程序(grub)的启动信息
	3.加载核心操作系统的核心信息，核心开始解压缩，并尝试驱动所有的硬件设备
	4.核心执行init程序，并获取默认的运行信息
	5.init程序执行/etc/rc.d/rc.sysinit文件
	6.启动核心的外挂模块
	7.init执行运行的各个批处理文件(scripts)
	8.init执行/etc/rc.d/rc.local
	9.执行/bin/login程序，等待用户登录
	10.登录之后开始以Shell控制主机


	'POST：Power-On-Self-Test，加电自检'，是BIOS功能的一个主要部分。负责完成对CPU、主板、内存、硬盘子系统、显示子系统、串并行接口、键盘、CD-ROM光驱等硬件情况的检测。
		ROM：BIOS，Basic Input and Output System，保存着有关计算机系统最重要的基本输入输出程序，系统信息设置、开机加电自检程序和系统启动自举程序等。
			只读
		
		RAM：CMOS互补金属氧化物半导体，保存各项参数的设定
			可读可写

		按次序查找引导设备，第一个有引导程序的设备为本次启动设备

	'bootloader: 引导加载器，引导程序'
		windows: ntloader，仅是启动OS
		Linux：功能丰富，提供菜单，允许用户选择要启动系统或不同的内核版本；把用户选定的内核装载到内存中的特定空间中，解压、展开，并把系统控制权移交给内核
			
			LILO：LInuxLOader
			GRUB: GRandUnified Bootloader（5和6，7都用的这个）
				GRUB 0.X: GRUB Legacy，GRUB2
					CentOS7： 2版本
						$ rpm -qi grub 
					CetnOS6: 0.97版本


	'MBR:'
		446: bootloader,64: 分区表, 2: 55AA

	'GRUB:'
		primary boot loader : 
			1st stage（第一阶段，445个字节），1.5 stage（1.5阶段，为进入2阶段，让我们能够识别/boot分区，才能访问/boot分区中的各种文件）
		secondary boot loader ：
			2nd stage，分区文件（/boot/grub目录下的文件,选择内核的界面grub.conf）

		
		/boot/initramfs-2.6.32-642.el6.x86_64.img
			此文件包括了，系统启动需要的各种库文件，驱动文件
			(装系统之后，创建此文件)

		/lib/modules/2.6.32-642.el6.x86_64/:
			系统的驱动文件以及库文件

		/boot/vmlinuz-VERSION-release
			光盘自带的文件



		1.实验：删除了/boot/initramfs-2.6....img文件之后，如何恢复
			（1）挂载系统光盘（第一张盘）
			（2）VMware，ESC键，选择光盘引导
			（3）选择救援模式
			  1）选择开启网络，使用scp拷贝
			  2）不开启网络：
			（4）进入到真正的系统目录中：
				1) $ chroot /mnt/sysimage/  切换根到真正的系统根（原来是光盘的根）
				2) $ cd /boot
				3) $ mkinitrd /boot/initramfs-`uname -r`.img `uname -r`
						这里最后要加内核版本作为参数
					(1)如果没有这个命令，则 exit 退出到光盘目录（'貌似会执行失败这一步'）
						执行如下命令：
						$ exit 
						$ mkinitrd /mnt/sysimage/boot/initramfs-`uname -r` `uname -r`
					(2)或者重新装内核包rpm，也可以实现（就是把所有文件重新装了一遍）（切根模式下）
						$ chroot /mnt/sysimage
						$ cd /boot
						$ mount /dev/sr0 /mnt
						$ rpm -ivh /mnt/Packages/kernel-2.6.32-642.e16.x86_64.rpm --force
						$ ls
						如果上面也执行失败：
							进入到grub界面：
								grub> 类似的界面

								输入以下命令：

								$ kernel /vmlinuz-VERSION-release

							或者再进入救援模式：
								$ chroot /mnt/sysimage
								$ grub-install /dev/sda 
								$ cd /boot 
								$ ls
								查看如果修复成功，则有需要的img文件
								$ reboot
								重启之后，等待selinux修复，可能要等待一些时间

		2.实验：如果删除了/boot/* 所有文件，如何恢复？
			（1）挂载系统光盘（第一张盘）
			（2）VMware，ESC键，选择光盘引导
			（3）选择救援模式
			（4）切根，执行以下命令：
				$ grub-install /dev/sda 
				$ mount /dev/sr0 /mnt 
				$ rpm -ivh --force kernel-2.6.32-642.e16.x86_64.rpm 
				$ cd /boot/grub 
				$ vim grub.conf 
					default=-
					timeout=5
					title CentOS 6.8 (Maxie-2.6.32)
						root (hd0,0)
						kernel /vmlinuz-2.6.32-642.e16.x86_64 selinux=0 root=/dev/mapper/vg0-root LANG=en.US.UTF-8 rd_LVM_LV=vg0/root
						initrd /initramfs-2.6.32-642.e16.x86_64.img
				$ exit 
				$ reboot 即可
			如果是'CentOS7：'
				重建grub的命令是：
					grub-install 是grub 0.xx的了，grub2以后貌似是用 'update-grub'





	'kernel：'
		自身初始化：
			探测可识别到的所有硬件设备
			加载硬件驱动程序（借助于ramdisk加载驱动）
			以只读方式挂载根文件系统
			运行用户空间的第一个应用程序：/sbin/init



'启动流程：'
	
	'ramdisk：'
		内核中的特性之一：使用缓冲和缓存来加速对磁盘上的文件访问，并加载相应的硬件驱动
			
			ramdisk--> ramfs提高速度
			CentOS 5: initrd
				工具程序：mkinitrd
			CentOS 6，7: initramfs
				工具程序：mkinitrd, dracut

		'ramdisk管理：'
			ramdisk文件的制作：
			
			(1) 'mkinitrd命令'
				为当前正在使用的内核重新制作ramdisk文件
				mkinitrd/boot/initramfs-$(uname-r).img$(uname-r)
			(2) 'dracut命令'
				为当前正在使用的内核重新制作ramdisk文件
				dracut/boot/initramfs-$(uname-r).img$(uname-r)


	'系统初始化：'
		POST --> BootSequence(BIOS) --> Bootloader(MBR) --> kernel(ramdisk) --> rootfs(只读) --> init（systemd）


	'系统启动流程：'
		init程序的类型：
		
		SysV: init, CentOS 5之前
			配置文件：/etc/inittab
		
		Upstart: init,CentOS6
			配置文件：/etc/inittab, /etc/init/*.conf
		
		Systemd：systemd, CentOS 7
			配置文件：/usr/lib/systemd/system
				/etc/systemd/system




