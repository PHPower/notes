5.25 (Mage Web Service Http基础原理)


http：最初传送的是html
	html：超文本标记语言 (hyper text makeable language)

HTTP: HyperText Transfer Protocol: 超文本传输协议

超链接 --> 引用到另一个文档

资源请求的方法：GET

'MIME: Multipurpose Internet Mail Extension, 多用途互联网邮件扩展'


SMTP: Simple Mail Transmission Protocol, 纯文本
	MIME: 将非文本数据在传输前重新编码为文本格式，接收方能够用相反的方式将其重新还原为原来的格式，还能够调用相应的程序来打开此文件
	Base64
	
http1.0：
	http1.0：GET,PUT,DELETE（统治Http近10年）

	引入了MIME：Multipurpose Internet Mail Extensions
		能够把非文本格式的文件转换成文本格式的信息，并在传输完成后在对端上转换回去

	以文本格式传输非文本信息

SPDY协议(Google）：加速HTTP进程

http1.1：现在应用最广泛的协议


'web资源类型：'web resource 
	静态资源：
		从客户端请求一个资源时，服务器把资源原封不动的传送给客户端
	动态资源：
		在服务器端是一个程序，当客户端请求这个资源时，程序会在环境中运行完之后，生成的结果发送给客户端
	注意：一个页面中展示的资源可能有多个；每个资源都需要有单独请求

'并发模型：'
	在每个客户端连接到服务端的80端口之后，为每个用户创建一个套接字文件；
	在内核的内存中保存客户端连接到服务器端的信息；

'http代理：'
	客户端 --> 代理服务器(缓存) --> WEB服务器


'URN(uniform resource )：统一资源命名符'
	URL：uniform resource locator：统一资源定位符
		例如：http://www.baidu.com/index.html
		scheme://server[:Port][/PATH/TO/SOME_RESOURCE]

			/是：DocumentRoot中定义的 /var/www/html/


	web资源：http://www.magedu.com/logo.gif
		多个资源很可能被整合为一个html文档
		每个资源都是由服务器单独提供的

	加速访问页面：


	资源节约：对服务器很重要


'处理请求：分析请求报文的http请求报文首部'
	http协议：
		http请求报文首部
		http相应报文首部

	请求报文首部的格式：
		<method><URL><VERSION>
		HEADERS: (name:value)
		<request body>

'一次完整的http请求处理过程：'
	1、建立或处理连接：接收请求或拒绝请求
	2、接受请求：接收来自于网络上的主机请求报文中对某特定资源的一次请求的过程；
	3、处理请求：对请求报文进行解析，获取客户端请求的资源及请求方法等相关信息；
	4、访问资源：获取请求报文中请求的资源；
	5、构建响应报文：组装起来(http响应报文)
	6、发送相应报文；
	7、记录日志；('很重要')，投放广告，用户习惯
		分析日志是一种基本能力


	C10K：Connections 10000：并发连接1W次

	'接收请求的模型：'
		并发访问响应模型：
			单进程I/O模型：启动一个进程处理用户请求；这意味着，一次只能处理一个请求，多个请求被串行响应；
			多进程I/O结构：由父进程并行启动多个子进程，每个子进程响应一个请求；（两级结构）
			复用的I/O结构：一个进程响应n个请求
				多线程模型：一个进程生成n个线程，一个线程处理一个请求；
					并行效率并不高，并发能力有限
				事件驱动(event-driven)：一个进程直接处理n个请求；（内部无线程）
			复用的多进程I/O结构：启动多个(m)个进程，每个进程生成(n)个线程；（三级结构） --> 'nginx就是这种模型'
				响应的请求的数量：m*n个



'http服务器程序：'
	httpd(apache)：老大，稳定（后端Web服务器）
	nginx：06年之后的（俄国）（中间的，代理服务器）
	lighttpd：支持lua脚本（德国）

	应用程序服务器：
		IIS：.NET（自带应用程序）
		tomact：.jsp

	www.netcraft.com
		数据挖掘站点


	httpd的安装和使用：
		ASF：apache software foundation
			httpd：apache
				a patchy server = apache 
					httpd 

	
	BSD,GPL,MIT,Apache：四种开源协定

	'httpd的特性：'
		高度模块化：core + modules
		DSO：dynamic shared object（动态共享对象）
		MPM：Multipath processing（多路处理模块）
!!!			'prefork：'多进程模型，每个进程响应一个请求（2.2安装后不允许修改，2.4可以修改）
				一个主进程：负责生成子进程及回收子进程；负责创建套接字；负责接收请求，并将其派发给某子进程进行处理；
				n个子进程：每个子进程处理一个请求；
				工作模型：会预先生成几个空闲进程，随时等待用于响应用户请求；最大空闲和最小空闲

!!!			'worker：'多进程多线程模型，每线程处理一个用户请求；
				一个主进程：负责生成子进程；负责创建套接字；负责接受请求，并将其派发给某子进程进行处理；
				多个子进程：每个子进程负责生成多个线程；
				每个线程：负责响应用户请求；
				并发相应数量：m*n
					m：子进程数量
					n：每个子进程所能创建的最大线程数量

!!!			'event：'事件驱动模型，多进程模型，每个进程响应多个请求；
				一个主进程：负责生成子进程；负责创建接字；负责接受请求，并将其派发给某子进程进行处理；
				子进程：基于事件驱动机制直接响应多个请求



	
	'httpd2.2与2.4的区别：'
		版本区别：
			CentOS7：base仓库中自带2.4版本
			CentOS6：base仓库中自带2.2版本
		生产区别：
			2.2：仍为测试使用模型
			2.4：event

		MPM：
			2.4：动态可装载
			2.2：不可动态装载

		2.4增加了：
			mod proxy fcgi



	'httpd的功能特性：'
		CGI：Common Gateway Interface
		虚拟主机：IP PORT FQDN
		反向代理
		负载均衡
		路径别名
		丰富的用户认证机制
			basic
			digest
		支持第三方模块
		...

	安装httpd：
		rpm包：CentOS发行版中直接提供
		编译安装：定制新功能，或其他原因


'CentOS7安装httpd：httpd-2.4'
	程序环境：
		配置文件：
			/etc/httpd/conf
			/etc/httpd/conf.d/*.conf 	（模块化配置文件，可以自己定义配置文件）
			模块相关的配置文件：/etc/httpd/conf.modules.d/*.conf  	2.4才有的目录

		systemd unit file：
			/usr/lib/systemd/system/httpd.service

		主程序文件：
			/usr/sbin/httpd 
				2.4版本支持 MPM的动态和切换

		日志文件：
			/var/log/httpd： 
				access_log：访问日志
				error_log：错误日志

		站点文档：
			/var/www/html/

		模块文件路径：
			/usr/lib64/httpd/modules

		服务控制：
			systemctl enable|disable httpd.service 
			systemctl start|stop|restart|status httpd.service 


	访问本机的manual：
		http://IP/manual




'回顾：'

	http协议：web，html，http，httpd

	httpd：
		2.4，2.2

	httpd：
		MPM：多路处理模块
			prefork：两级进程模型，父进程管理子进程，每个子进程响应一个请求

			worker：三级模型，父进程管理子进程，子进程通过线程响应用户请求；每线程处理一个用户请求
			event 两级模型，父进程管理子进程，子进程通过event-driven机制直接响应n个请求

'web service (2)'


'httpd-2.4的常用配置'
	
	主配置文件：/etc/httpd/conf/httpd.conf
		Section 1：Global Environment（全局环境）
		Section 2：'Main' server configuration（主服务器配置）
		Section 3：Virtual Hosts （虚拟主机配置）

		2和3不会同时生效。
		一般一个服务器要服务一个站点，就使用主服务器


	配置格式：
		directive value 
			directive(指令)：不区分字符大小写
			value(值)：为路径时，是否区分字符大小写，取决于文件系统

	自带帮助文档：
		yum install httpd-manual -y

		查看：http://172.16.1.61/manual/ 即可



	'常用配置：'(在httpd的主配置文件中配置以下信息)

		1、修改监听的IP和Port：
			Listen [IP:]PORT 

				(1)省略IP表示为0.0.0.0；
				(2)Listen指令可以重复出现多次
					Listen 80
					Listen 8080
				(3)修改监听socket，重启服务进程方可生效；
				(4)限制其必须通过ssl通信时，protocol需要定义为httpds

					由于http是基于文本传输，所以非常容易被抓包
					所以我们要做 https

		2、持久(保持)连续，长连接：
			Persistent Connection：tcp连续建立后，每个资源获取完成后不全断开连接，而是继续等待其它资源请求的进行；
				如何断开？
					数量限制
					时间限制

					副作用：对并发访问量较大的服务器，长连接机制会使得后续某些请求无法得到正常响应
					折中：使用较短的持久连接时长，


					KeepAlive On | Off  ：是否开启
					KeepAliveTimeout #：请求超时时间(秒)
					MaxKeepAliveRequests #：请求访问资源数量
						两者只要有一个到达，就会断开


					修改完配置文件后，使用以下命令检查语法：
						$ httpd -t 


					测试：
						telnet WEB_SERVER_IP PORT
						GET /URL HTTP/1.1
						Host: WEB_SERVER_IP
						'这里要两次回车，获取内容'

					注意：httpd-2.4的KeepAliveTimeout可以是毫秒级

		'3、MPM：'

			httpd-2.2不支持同时编译多个MPM模块，所以只能编译选定要使用的那个；CentOS 6的rpm包为此专门提供了三个应用程序文件，httpd(prefork)，httpd.worker，httpd.event，分别用于实现对不同的MPM机制的支持；确认现在使用的是哪下程序文件的方法；
				ps aux | grep hhtpd 


			默认使用的为/usr/sbin/httpd，其为prefork的MPM模块；
				查看httpd程序的模块列表：
					查看静态编译的模块：
						$ httpd -l 
					查看静态编译及动态编译的模块：
						$ httpd -M 

			更换使用httpd程序，以支持其他MPM机制：
				/etc/sysconfig/httpd:
					HTTPD=/usr/sbin/httpd.{worker,event}


			注意：重启服务进程方可生效
				service httpd restart | systemctl restart httpd.service 

			MPM配置：
				prefork的配置：
					<ifModule prefork.c>
					StartServers  8			#空闲子进程
					MinSpareServers 5		#保留备用的最小服务器进程数
					MaxSpareServers 20		#保留备用的最大服务器进程数
					ServerLimit 256			#在服务器生命周期中的最大值
					MaxClients 256			#允许启动的最大服务器进程数
					MaxRequestPerChild 4000	#服务器进程服务的最大请求数
					</ifModule>

				worker的配置：
					<IfModule worker.c>
					StartServers 4			#要启动的服务器进程的初始数量
					MaxClients	300			#最大并发客户端连接数
					MinSpareThreads	25		#保留备用的最小工作线程数
					MaxSpareThreads 75		#保留备用的最大工作线程数
					ThreadPerChild  25		#每个服务器进程中不断的工作线程数
					MaxRequestPerChild 0	#服务器进程服务的最大请求数
					</IfModule>

			httpd-2.2测试：
				(1)修改/etc/sysconfig/httpd中的 "HTTPD=/usr/sbin/httpd.worker" 这一项，把注释去掉即可
				(2)重启服务：service httpd restart
				(3)查看是否加载成功：httpd -M | grep mpm 即可

			httpd-2.4测试：
				(1)修改/etc/httpd/conf.modules.d/00-mpm.conf文件中的 "LoadModule mpm_prefork_module modules/mod_mpm_prefork.so"
					要启用哪项，则取消其注释即可。把其他注释掉
				(2)重启服务: systemctl restart httpd 
				(3)查看是否加载成功：httpd -M | grep mpm 即可


			PV，UV：
				PV：Page View
				UV：User(uniq) View
				IP：IP地址访问


		4、DSO：动态装载模块

			配置指定实现模块加载
				LoadModule <mod_name> <mod_path>

				模块文件路径可使用相对路径：
					相对于ServerRoot (默认为/etc/httpd/)


		5、定义'Main' server的文档页面路径(主服务器)

			httpd-2.2：在配置了虚拟服务器之后，主服务器必须注释掉。
			httpd-2.4：配置了虚拟服务器之后，自动会把主服务器取消掉
			
			ServerName 		服务器名
				语法格式：
					ServerName [scheme://]fully-qualified-domain-name[:port]
			ServerAlias		服务器别名
			DocumentRoot ""   	
			
			文档路径映射：
				DocumentRoot指向的路径为URL路径的起始位置
					其相当于站点URL的根路径；


				'URL PATH 与 FileSystem PATH不是等同的，而是存在一种映射关系：'
					URL/ --> FileSystem /var/www/html/
						/images/logo.jpg --> /var/www/html/images/logo.jpg 



		'6、站点访问控制常见机制：'
			
			'帮助文档：'
				http://172.16.1.61/manual/mod/core.html

			可基于两种机制指明对哪些资源进行何种访问控制

				(1)文件系统路径：
					<Directory "">
					...
					</Directory>


					<File "">
					...
					</File>


					<FileMatch "PATTERN">
					...
					</FileMatch>


				(2)URL路径：
					<Location "">
					...
					</Location>

					<LocationMatch "PATTERN">
					...
					</LocationMatch>


			<Directory>中"基于源地址"实现访问控制：
			

				'httpd-2.2： '
					(1) AllowOverride
						与访问控制相关的哪些指令可以放在.htaccess文件(每个目录下都可以有一个)中：
							All;
							None;

					(2)order和allow、deny
						order：定义生效次序；写在后面的表示默认法则；

						Allow from IP地址/网络地址都可以
							Allow from 172.16		#网络地址
						Deny from 
							Deny from 172.16.1.62	#拒绝网络地址内单个IP地址的访问



						如果不写Deny则不在allow中的IP都被拒绝

				'httpd-2.4： '
					基于IP控制：
						Require ip #IP地址或网络地址
						Require not ip #IP地址或网络地址

					基于主机名控制：
						Require host #主机名或域名
						Require not host #

						如果要加多个配置，要加代码块：
							<Requireall>
								Require ip #IP地址或网络地址
								Require not ip #IP地址或网络地址
							</Requireall>
					http://172.16.1.61/manual/mod/mod_authz_core.html#require


				'控制页面资源允许所有来源的主机可访问：'
					httpd-2.2：
						<Directory "">
						...
							Order allow,deny
							Allow from all 
						...
						</Directory>

					httpd-2.4
						<Directory "">
						...
							Require all granted
						...
						</Directory>


				控制页面资源'拒绝'所有来源的主机可访问：
					httpd-2.2：
						<Directory "">
						...
							Order allow,deny
							Deny from all 
						...
						</Directory>

					httpd-2.4
						<Directory "">
						...
							Require all denied
						...
						</Directory>


				'Options：'Configures what features are available in a particular directory
					后跟一个或多个以空白字符分割的"选项"列表：
						Indexes：指明的URL路径下不存在与定义的主页面资源相符的资源文件时，返回索引列表给用户；
						FollowSymLinks：允许跟踪符号链接文件所指向的源文件
						None：所有都不允许
						All：All options except for MultiViews；所有选项都被允许



		7、定义站点主页面：
			DirectoryIndex index.html index.html.var 


		8、定义路径别名：
			格式：
				Alias /URL/ "/PATH/TO/SOME_DIR/"

			2.2修改了之后就可以访问，但是2.4必须添加授权信息：
				<Directory "/usr/share/backgrounds/">
				    AllowOverride None
				    Options  all
				    Require all granted
				</Directory>


			DocumentRoot "/www/htdocs"
				http://www.maxiecloud.com/download/bash-4.4.....rpm 
					/www/htdocs/download/bash-4.4....rpm 

			Alias /download/ "/rpms/pub/"
				http://www.maxiecloud.com/download/bash-4.4.....rpm 
					/rpms/pub/bash-4.4....rpm


		9、设定默认字符集：
			AddDefaultCharset UTF-8

			中文字符集：GBK，GB2312，GB18030


		'10、日志设定：'

			日志类型：访问日志和错误日志

			错误日志：
				ErrorLog logs/error_log
				LogLevel warn
					Possible values include: debug,info,notice,warn,error,crit,alert,emerg.

			'访问日志：內建了很多宏符号'
				宏帮助文档：http://172.16.1.61/manual/mod/mod_log_config.html#formats

				LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined

					%h：客户端主机名，一般为IP地址；172.16.1.11
					%l：登录名；一般为一个减号 "-"  这是由客户端identd进程判断的RFC1413身份(identity)
					%u：这是HTTP认证系统得到的访问该网页的客户标识(userid)，环境变量REMOTE_USER会被设为该值并提供给CGI脚本。如果状态码是401，表示客户未通过认证，则此值没有意义。如果网页没有设置密码保护，则此项将是"-"。
					%t：服务器完成请求处理时的时间 ；[25/May/2017:08:32:05 +0800]
					\"%r\"： 转义引号，请求报文的首行；"GET /manual/mod/mod_log_config.html HTTP/1.1"
					%>s：最后一次的请求返回的状态码；如果是%s则是第一次的返回状态码
					%b：响应报文的大小，单位是字节；不包括响应报文的http首部；In CLF format, i.e. a '-' rather than a 0 when no bytes are sent.
					%{Referer}i：请求报文中首部"referer"的值；即从哪个页面中的超链接跳转至当前页面的；
					%{User-Agent}i：请求报文中首部"User-Agent"的值；即发出请求的应用程序；


		
		'11、基于用户的访问控制'

			认证质询：(httpd内置的功能)
				WWW-Authenticate：响应码为401，拒绝客户端请求，并'说明要求客户端提供账号和密码；'
					返回一个401，要求客户端提供.....

			认证： 
				Authorization：客户端用户填入账号和密码后再次发送请求报文；认证通过时，则服务器发送响应的资源；

				认证方式：(两种) http传输时，是明文传输的
					basic：明文
					digest：消息摘要认证(传输密码做单向加密)

					
				'表单认证(在打开网页后在页面上进行认证)、协议认证(通过http服务的认证)'


			安全域：需要用户认证后方能访问的路径；应该通过名称对其进行标识，以便于告知用户认证的原因；

			用户的账号和密码存放于何处？
				虚拟账号：仅用于访问某服务时用到的认证标识

				存储：
					1、文本文件；
					2、SQL数据库；
					3、ldap目录存储；轻量级目录服务访问协议

				basic认证配置示例：
					(1)定义安全域：(可以在/etc/httpd/conf.d/目录下创建一个admin.conf的配置文件)
						<Directory "/data/web/www/admin">		#定义目录
							Options None 
							AllowOverride None 					#不允许覆盖
							AuthType Basic 						#认证类型为Basic
							AuthName "STRING"					#输入提示信息
							AuthUserFile "/PATH/TO/HTTPD_USER_PASSWD_FILE"		#用户+密码文件路径，最好是隐藏文件 .filename
							Require user username1 username2 ...
						</Directory>

						允许账号文件中的所有用户登陆访问：
							Require valid-user
					
					(2)提供账号和密码存储(文本文件)
						'使用专用命令完成此类文件的创建及用户管理：'
							htpasswd [options] /PATH/TO/HTTPD_USER_PASSWD_FILE username 
								选项：
									-c：自动创建此处指定的文件，因此，仅应该在此文件不存在时使用；
									-m：md5格式加密
									-s：sha格式加密
									-D：删除指定用户
									-b：批创建用户

				另外：基于组账号进行认证：
					(1)定义安全域



		'12、虚拟主机'

			站点标识：socket
				IP相同，但端口不同；
				IP不同，但端口均为默认端口；
				FQDN不同：
					请求报文中首部：
						Host: www.maxiecloud.com 


			有三种实现方案：
				基于IP： 
					为每个虚拟主机准备至少一个ip地址；
				基于port：
					为每个虚拟主机准备至少一个独立的Port；
				基于FQDN：
					为每个虚拟主机至少使用一个FQDN；


			注意(专用于httpd-2.2版本）：一般虚拟机不要与中心主机混用；因此，要使用虚拟主机，得先禁用'Main'主机；
					禁用方法：注释 中心主机的DocumentRoot指令即可


			虚拟主机的配置方法：
				<VirtualHost IP:Port>
					ServerName FQDN
					DocumentRoot ""
					<Directory "">
						Options None 
						AllowOverride None 
						Require all granted
					</Directory>
					CustomLog "logs/maxiecloud_access_log"  combined		#指明日志格式
				</VirtualHost>


			如果是httpd-2.2的话：使用基于FQDN的虚拟主机时，需要事先使用如下指令
				则需要在这些配置之前加上一行： 'NameVirtualHost IP:Port'
					<VirtualHost IP:Port>
					ServerName FQDN
					DocumentRoot ""
					<Directory "">
						Options None 
						AllowOverride None 
						Require all granted
					</Directory>
					CustomLog "logs/maxiecloud_access_log"  combined		#指明日志格式
				</VirtualHost>


		'13、stauts页面' 

			LoadModule status_module modules/mod_status.so 

			'httpd-2.2'
				<Location /server-status> 
					SetHandler server-status
					Order allow,deny
					Allow from 172.16
				</Location>

			'httpd-2.4'
				<Location /server-status>
					SetHandler server-status
					Require all granted
				</Location>




			

'https配置步骤'

	1、先创建CA服务器，创建CA认证
		(1)生成私钥：
			~]# (umask 077; openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096)
		(2)生成自签证书：
			~]# openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem -days 3655
				-new：生成新证书签署请求
				-x509：生成自签格式证书，专用于创建私有CA时
				-key：生成请求时用到的私有文件路径
				-out：生成的请求文件路径；如果自签操作将直接生成签署过的整数
				-days：证书的有效时长，，单位是day；默认是365day

		(3)为CA提供所需的目录及文件：
			~]# mkdir -pv /etc/pki/CA/{certs,crl,newcerts} 		
				这步，在Centos6上做，7无需执行

			~]# touch /etc/pki/CA/{serial,index.txt}
			~]# echo 01 > /etc/pki/CA/serial


	2、http服务器发起CA认证请求：
		(1)用到证书的主机生成私钥：
						~]# mkdir /etc/httpd/ssl 
						~]# cd /etc/httpd/ssl 
						~]# (umask 077; openssl genrsa -out /etc/httpd/ssl/httpd.key 2048)
		(2)生成证书签署请求：
			~]# openssl req -new -key /etc/httpd/ssl/httpd.key -out /etc/httpd/ssl/httpd.csr -days 365
				这里的csr格式：
					表示是"证书签署请求"

					[root@https-server ssl]# openssl req -new -key httpd.key -out httpd.csr -days 2017
					You are about to be asked to enter information that will be incorporated
					into your certificate request.
					What you are about to enter is what is called a Distinguished Name or a DN.
					There are quite a few fields but you can leave some blank
					For some fields there will be a default value,
					If you enter '.', the field will be left blank.
					-----
					Country Name (2 letter code) [XX]:CN
					State or Province Name (full name) []:Beijing
					Locality Name (eg, city) [Default City]:Beijing
					Organization Name (eg, company) [Default Company Ltd]:maxiecloud
					Organizational Unit Name (eg, section) []:Ops
			!!!		Common Name (eg, your name or your servers hostname) []:www.maxiecloud.com  		#这里是以后在浏览器输入的网址
					Email Address []:maxie@maxiecloud.com


		(3)将请求通过可靠方式发送给CA主机：
			[root@https-server ssl]# scp httpd.csr root@172.16.1.31:/tmp
			The authenticity of host '172.16.1.31 (172.16.1.31)' can't be established.
			RSA key fingerprint is 4b:b0:8f:9a:8b:6c:33:bd:f9:16:1a:9b:55:fb:41:e2.
			Are you sure you want to continue connecting (yes/no)? yes
			Warning: Permanently added '172.16.1.31' (RSA) to the list of known hosts.
			root@172.16.1.31's password:
			httpd.csr                                     100% 1070     1.0KB/s   00:00


		(4)在CA主机上签署证书：
			~]# openssl ca -in /web/httpd/httpd.csr -out /etc/pki/CA/certs/httpd.crt -days 3650

				[root@ca-server CA]# openssl ca -in /tmp/httpd.csr -out /etc/pki/CA/certs/httpd.crt -days 2017
				Using configuration from /etc/pki/tls/openssl.cnf
				Check that the request matches the signature
				Signature ok
				Certificate Details:
				        Serial Number: 1 (0x1)
				        Validity
				            Not Before: May 28 23:18:42 2017 GMT
				            Not After : Dec  5 23:18:42 2022 GMT
				        Subject:
				            countryName               = CN
				            stateOrProvinceName       = Beijing
				            organizationName          = maxiecloud
				            organizationalUnitName    = Ops
				            commonName                = www.maxiecloud.com
				            emailAddress              = maxie@maxiecloud.com
				        X509v3 extensions:
				            X509v3 Basic Constraints:
				                CA:FALSE
				            Netscape Comment:
				                OpenSSL Generated Certificate
				            X509v3 Subject Key Identifier:
				                90:59:F8:25:F2:A4:4E:E0:FF:1B:48:73:FF:87:78:69:C6:75:21:22
				            X509v3 Authority Key Identifier:
				                keyid:62:C1:E6:A1:B8:39:5E:18:01:AF:00:55:E2:39:4F:16:C8:27:EE:F0

				Certificate is to be certified until Dec  5 23:18:42 2022 GMT (2017 days)
				Sign the certificate? [y/n]:y


				1 out of 1 certificate requests certified, commit? [y/n]y
				Write out database with 1 new entries
				Data Base Updated
				[root@ca-server CA]# ls
				cacert.pem  crl        index.txt.attr  newcerts  serial
				certs       index.txt  index.txt.old   private   serial.old
				[root@ca-server CA]# ls certs/
				httpd.crt
				[root@ca-server CA]# scp certs/httpd.crt root@172.16.1.30:/etc/httpd/ssl
				The authenticity of host '172.16.1.30 (172.16.1.30)' can't be established.
				RSA key fingerprint is d6:17:18:5e:94:83:64:9b:7c:63:c4:fe:7b:6a:32:50.
				Are you sure you want to continue connecting (yes/no)? yes
				Warning: Permanently added '172.16.1.30' (RSA) to the list of known hosts.
				root@172.16.1.30's password:
				httpd.crt                                     100% 5915     5.8KB/s   00:00

			查看证书中的信息：
				~]# openssl x509 -in /etc/pki/CA/certs/httpd.crt -noout -serial -subject	


	3、配置https

		1)安装支持组件：
			$ yum install -y mod_ssl

		2)编辑配置文件：
			$ vim /etc/httpd/conf.d/ssl.conf
				修改其中：
					取消这两项的注释，并修改ServerName中的地址
					DocumentRoot "/var/www/html"			
					ServerName www.maxiecloud.com:443

					修改其下：
					SSLCertificateFile /etc/pki/CA/certs/http.crt   #这里修改为证书的地址
					SSLCertificateKeyFile /etc/httpd/http.key  #这里为http的私钥地址
		重启http服务
		浏览器访问：
			https://172.16.1.131即可

	4、使用命令验证：(在CA主机上的操作)
		$ vim /etc/hosts 
		172.16.1.30 www.maxiecloud.com 

		$ openssl s_client -connect www.maxiecloud.com:443 
		$ openssl s_client -connect www.maxiecloud.com:443 -CAfile /etc/pki/CA/cacert.pem 


		[root@ca-server CA]# openssl s_client -connect www.maxiecloud.com:443 -CAfile cacert.pem
		CONNECTED(00000003)
		depth=1 C = CN, ST = Beijing, L = Beijing, O = maxiecloud, OU = Ops, CN = ca.maxiecloud.com, emailAddress = ca@maxiecloud.com
		verify return:1
		depth=0 C = CN, ST = Beijing, O = maxiecloud, OU = Ops, CN = www.maxiecloud.com, emailAddress = maxie@maxiecloud.com
		verify return:1
		---
		Certificate chain
		 0 s:/C=CN/ST=Beijing/O=maxiecloud/OU=Ops/CN=www.maxiecloud.com/emailAddress=maxie@maxiecloud.com
		   i:/C=CN/ST=Beijing/L=Beijing/O=maxiecloud/OU=Ops/CN=ca.maxiecloud.com/emailAddress=ca@maxiecloud.com
		---
		Server certificate
		-----BEGIN CERTIFICATE-----
		MIIFDjCCAvagAwIBAgIBATANBgkqhkiG9w0BAQsFADCBkjELMAkGA1UEBhMCQ04x
		2h0=
		-----END CERTIFICATE-----
		subject=/C=CN/ST=Beijing/O=maxiecloud/OU=Ops/CN=www.maxiecloud.com/emailAddress=maxie@maxiecloud.com
		issuer=/C=CN/ST=Beijing/L=Beijing/O=maxiecloud/OU=Ops/CN=ca.maxiecloud.com/emailAddress=ca@maxiecloud.com
		---
		No client certificate CA names sent
		Server Temp Key: ECDH, prime256v1, 256 bits
		---
		SSL handshake has read 1989 bytes and written 375 bytes
		---
		New, TLSv1/SSLv3, Cipher is ECDHE-RSA-AES256-GCM-SHA384
		Server public key is 2048 bit
		Secure Renegotiation IS supported
		Compression: NONE
		Expansion: NONE
		SSL-Session:
		    Protocol  : TLSv1.2
		    Cipher    : ECDHE-RSA-AES256-GCM-SHA384
		    Session-ID: 84A3DEE1EC7B34CC942A1D699C7C3EE88303C7F6EA6C67DAF1C35ADD541AE67A
		    Session-ID-ctx:
		    Master-Key: C24724504C49CE55F8CB0AC055EE9076AC3793439790101BAD7DAB90946BA16DD854915C9FA8266D09A5079FC3535C20
		    Key-Arg   : None
		    Krb5 Principal: None
		    PSK identity: None
		    PSK identity hint: None
		    TLS session ticket lifetime hint: 300 (seconds)
		    TLS session ticket:
		    0000 - 6b 19 98 43 07 d6 2a be-f2 e0 ef e2 dd 58 6a 06   k..C..*......Xj.
		    0010 - 72 5d 6b cf 27 67 bc 63-70 dd b4 64 e9 2c e9 22   r]k.g.cp..d.,."
		    0020 - e1 92 0e 22 9c ee e9 ad-80 91 2b 84 54 df 39 c4   ..."......+.T.9.
		    0030 - c9 04 49 7d 1f 4d d4 b3-40 29 a7 5f 81 92 1a 88   ..I}.M..@)._....
		    0040 - 24 e1 b2 ad 22 85 f7 b2-8e 58 db e5 35 35 c1 fd   $..."....X..55..
		    0050 - be 73 4c d6 63 c1 2b 09-41 13 c5 87 80 b6 8d b7   .sL.c.+.A.......
		    0060 - f9 aa 22 fc 2e 06 e1 21-90 9e bc 69 6a 56 99 13   .."....!...ijV..
		    0070 - 6f 21 00 0c cf 80 b5 fe-de 48 98 44 10 b5 7d 7f   o!.......H.D..}.
		    0080 - 61 77 3d b6 05 69 03 77-96 62 92 d7 19 66 6c 21   aw=..i.w.b...fl!
		    0090 - 75 0d 12 c9 15 37 7c c6-8d 9f ae cc 2d ad 51 aa   u....7|.....-.Q.
		    00a0 - dd 10 aa 68 01 e5 a5 f3-7d fb 06 c5 cf 9b 4c 35   ...h....}.....L5
		    00b0 - 84 c8 07 63 69 cf 49 a1-c2 e2 e1 66 3a 28 e8 bf   ...ci.I....f:(..

		    Start Time: 1496015504
		    Timeout   : 300 (sec)
		    Verify return code: 0 (ok)
		---
















